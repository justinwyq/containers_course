# Check kubernetes cluster info
kubectl cluster-info

on mac can do hard link: 
sudo ln -s /opt/homebrew/bin/kubectl k ??? doesn't work
sudo ln -s /opt/homebrew/bin/kubectl /usr/local/bin/k  # guess need to specify the full path
alias k="/opt/homebrew/bin/kubectl"


To monitor the cluster: 
* octant: runs outside of the cluster, can save resources. depends on the permissions of the kubeconfig file
* kubecolor: runs inside the cluster


kubernetes shorthands:
po = pods
ns = namespace
k describe po/cilium-s8lz4 -nkube-system = k describe pods cilium-s8lz4 -n kube-system

kube-system: where most of the control plane components runs
any ns with -system at end: for managing control plane components
default: should not use this
kube-public: visible to all users, shouldn't use




multiple yaml files in 1:
start the file with three dashes: ---

k top no # list the processes running in node. but need metrics API server to be installed. github.com/kubernetes-sigs/metrics-server
k top po # list the processes running in pod

eg:
k top po -A --sort-by=memory  # show all metrics of all pods sorted by memory

metrics-server only provides rudimentary metrics 
kube-state-metrics gives more metrics. typically used together with prometheus



Resource limits on pods: can set a requested cpu/ram and a limit for cpu/ram
If request and limit are the same, it becomes a Guaranteed type
If not the same: Burstable (medium priority)
If not specified: Best Effort (lowest priority, killed the first)

LimitRange can help to set a default limit on all of the resources



Headless service:
Specify a clusterIP service with clusterIP=None
The service gives a list of the IP addresses of all the pods. It's up to the client to connect to the pod that he wants

In contrast, a normal cluster IP service provides 1 cluster IP address for the client to connect to, that helps to load balance between the pods


Stateful applications: created via StatefulSet
when creating statefulset, must always attach a headless service