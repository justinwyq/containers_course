---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dov-deploy
  namespace: myns
  labels:
    app: dov
    name: dov-po
spec:
  replicas: 4
  selector:
    matchLabels:
      app: dov
      name: dov-po
  template:
    metadata:
      name: dov-po
      # namespace: myns # no need namespace because it's understood
      labels: # good to have labels for everything
        app: dov
        name: dov-po
    spec:
      containers:
        - name: dov-container
          image: chukmunnlee/dov-bear:v5
          imagePullPolicy: IfNotPresent # Always, IfNotPresent, Never
          env:
            - name: INSTANCE_HASH
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            # - configMapRef: # for secrets, use secretRef
            #     name: dov-cm
            - secretRef: # for secrets, use secretRef
                name: dov-secret
          ports:
            - name: web-port
              containerPort: 3000
            - name: metrics-port
              containerPort: 3100
          livenessProbe:
            httpGet:
              path: /healthz
              port: web-port
            periodSeconds: 30
            initialDelaySeconds: 5 #ie 35 seconds for the first probe

# to create deployment: k apply -f dov-deploy.yml
# to show deployment: k get deploy,po -nmyns
# to show pods in deployment: k get deploy -nmyns
# to show all: k get all -nmyns
# show more info of all: k get all -nmyns -owide

# delete deployment: k delete deployment.apps/dov-deploy -nmyns

# in order to manage the number of replicas, kubernetes will create a replicaset (eg like autoscaling group)

# forward port: k port-forward -nmyns deploy/dov-deploy 8080:3000

# to scale deployment: k scale deploy/dov-deploy -nmyns --replicas=3
--- # to specify multiple yaml files in a single file
apiVersion: v1 # if core no need to write core/v1, eg just v1
kind: Service
metadata:
  name: dov-svc
  namespace: myns
  labels:
    app: dov
    name: dov-svc
spec:
  type: ClusterIP
  selector:
    app: dov
    name: dov-po
  ports:
    - name: svc-web-port
      port: 5000
      targetPort: web-port
    - name: svc-metrics-port
      port: 5100
      targetPort: metrics-port
# 3 types of services:
# cluster Ip
# node pod
# load balancer

# when create a service, kubernetes will take the service and put it in dns
# so can reference the service by name from any namespace: <service_name>.<namespace>.svc.cluster.local
# in this case: dov-svc.myns.svc.cluster.local

# forwarding: k port-forward -nmyns svc/dov-svc 8080:5000 # 8080 is local port, 5000 is service port
# note: can also use the named ports (svc-web-port, svc-metrics-port) instead of the numbers
